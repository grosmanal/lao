# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.availability:
        daysOfWeek: [ 1, 2, 3, 4, 5, 6 ]
        startOfDay: '0800'
        middleOfDay: '1300' # Doit être un des intervals entre startOfDay et endOfDay (à vérifier si paramétrable)
        endOfDay: '2000'
        interval: 'PT30M'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
          
    _instanceof:
        App\Repository\ActivityLoggableRepositoryInterface:
            tags: ['app.activity_repository']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
              
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Serializer\ApiNormalizer:
        # By default .inner is passed as argument
        decorates: api_platform.jsonld.normalizer.item
          
    App\EventListener\NotificationCreator:
        tags:
            -
                name: 'doctrine.orm.entity_listener'
                event: 'prePersist'
                entity: 'App\Entity\Comment'
                  
    App\Service\InitialAvatarGenerator:
        arguments:
            $vichUploaderMapping: 'user_avatar'
            $vichUploaderAvatarParameters: '%vich_uploader.mappings%'
              
    App\Service\Activity:
        arguments: [!tagged_locator { tag: app.activity_repository }]

    App\Service\Import\EntityFactory:
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@validator'

    App\Service\Import\PatientFactory:
        parent: App\Service\Import\EntityFactory
        calls:
            - setDependencies: [ '@App\Service\Availability' ]

    App\Service\Import\CareRequestFactory:
        parent: App\Service\Import\EntityFactory